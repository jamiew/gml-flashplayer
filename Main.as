package {			import flash.display.*;	import flash.events.*;	import flash.utils.Timer;	import flash.net.*;	import flash.ui.Mouse;	import flash.system.Security;    import flash.system.SecurityPanel;	import flash.geom.*;		import flash.filters.BlurFilter;	import flash.filters.ColorMatrixFilter;	import com.Tag;	import com.TagPlayer;						// ---------------------------------------	public class Main extends Sprite {							// --------------------------------------- map		static public function map(val:Number, inputMin:Number, inputMax:Number, outputMin:Number, outputMax:Number) {			//if(inputMin - inputMax < 0) return inputMax;			return ((val - inputMin) / (inputMax - inputMin) * (outputMax - outputMin) + outputMin);		}				// --------------------------------------- get normal point		static public function getNormalPoint(a:Point, b:Point, scale:Number):Point {						var c:Point				= new Point((a.x + b.x)/2, (a.y + b.y)/2);			var direction 			= 1;			var normal:Point 		= new Point();			var delta:Point 		= new Point();			var mid:Point 			= new Point();			var normalScaled:Point  = new Point();			var dis:Number			= Point.distance(a, b);						// get the delta			delta.x = a.x - b.x;			delta.y = a.y - b.y;			delta.normalize(1.0);						// set the normal			normal.x = delta.y;			normal.y = -delta.x;               			// the scaled normal			normalScaled.x = (c.x + (normal.x * (dis/2))) + scale;			normalScaled.y = (c.y + (normal.y * (dis/2))) + scale;			return normalScaled;		}																													public function Main(){ init() }							private static const FADING:ColorTransform = new ColorTransform(1, 1, 1, 0.99);		private var renderBMD : BitmapData;		private var renderBMP : Bitmap;				// --------------------------------------- main container		public var mainContainer:Sprite;		// --------------------------------------- xml settings		public var bPreLoadingTags:Boolean = false;		public var settingsXML:XML;		public var settingsLdr:URLLoader;		public var settingsURL:URLRequest;		public var totalTags:Number = -1;				// --------------------------------------- Tags		public var tag:Tag;				// --------------------------------------- main timer		public var timer:Timer = new Timer(60);			// ------		public var pntsArray:Array = new Array();		public var mouseDragged:Boolean = false;						// --------------------------------------- inti		public function init() {						trace("--- Initi page ---");									mainContainer = new Sprite();			mainContainer.x = 0; mainContainer.y = 0;			this.addChild(mainContainer);									// the stage 			stage.scaleMode = StageScaleMode.NO_SCALE;            stage.align 	= StageAlign.TOP_LEFT;						// start the main timer			timer.addEventListener(TimerEvent.TIMER, update);			timer.start();									//a bitmap to stuff it all into and give some sort of effect 			renderBMD = new BitmapData(1024, 768, false, 0xffffff);			renderBMP = new Bitmap( renderBMD );									tag = new Tag();			tag.loadTag("tag.xml");			mainContainer.addChild(tag);			//this.addChild( renderBMP );			// mouse events			stage.addEventListener(MouseEvent.MOUSE_DOWN, mousePressedEvent);			stage.addEventListener(MouseEvent.MOUSE_UP, mouseUpEvent);								}							// --------------------------------------- buttons down		public function mousePressedEvent(e:MouseEvent) {			mouseDragged = true;		}		public function mouseUpEvent(e:MouseEvent) {			mouseDragged = false;		}								// --------------------------------------- main update		public function update(e:Event) {									tag.update();						//renderBMD.colorTransform( renderBMD.rect, FADING );			//renderBMD.draw( tag );		}								}}